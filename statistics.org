#+TITLE: Statistics

This loads ESS and other modes for statistical programming in R for
Emacs

** ESS 
#+begin_src emacs-lisp
  (require 'ess-site)
#+end_src

** Polymode 
Lets you use multiple modes inside a single buffer. Useful for writing
R snippets within markdown or org-mode.

#+begin_src emacs-lisp :tangle no
  (require 'poly-R)
  (require 'poly-markdown)
  ;;; polymode + markdown
  (add-to-list 'auto-mode-alist '("\\.md" . poly-markdown-mode))
  ;;; polymode + R
  (add-to-list 'auto-mode-alist '("\\.Snw" . poly-noweb+r-mode))
  (add-to-list 'auto-mode-alist '("\\.Rnw" . poly-noweb+r-mode))
  (add-to-list 'auto-mode-alist '("\\.Rmd" . poly-markdown+r-mode))
#+end_src
** Shift-enter in ESS
 Shift-enter splits window & launches R, executes
 region, or executes line.
 http://www.emacswiki.org/emacs/EmacsSpeaksStatistics,

#+begin_src emacs-lisp :tangle no
(setq ess-ask-for-ess-directory nil)
  (setq ess-local-process-name "R")
  (setq ansi-color-for-comint-mode 'filter)
  (setq comint-scroll-to-bottom-on-input t)
  (setq comint-scroll-to-bottom-on-output t)
  (setq comint-move-point-for-output t)
  (defun my-ess-start-R ()
    (interactive)
    (if (not (member "*R*" (mapcar (function buffer-name) (buffer-list))))
      (progn
	(delete-other-windows)
	(setq w1 (selected-window))
	(setq w1name (buffer-name))
	(setq w2 (split-window w1 nil t))
	(R)
	(set-window-buffer w2 "*R*")
	(set-window-buffer w1 w1name))))
  (defun my-ess-eval ()
    (interactive)
    (my-ess-start-R)
    (if (and transient-mark-mode mark-active)
	(call-interactively 'ess-eval-region)
      (call-interactively 'ess-eval-line-and-step)))
  (add-hook 'ess-mode-hook
	    '(lambda()
	       (local-set-key [(shift return)] 'my-ess-eval)))
  (add-hook 'inferior-ess-mode-hook
	    '(lambda()
	       (local-set-key [C-up] 'comint-previous-input)
	       (local-set-key [C-down] 'comint-next-input)))
 (add-hook 'Rnw-mode-hook 
          '(lambda() 
             (local-set-key [(shift return)] 'my-ess-eval))) 
  (require 'ess-site)
#+end_src

** lintr, flycheck
 [[http://www.flycheck.org][Flycheck]] checks code in various languages, [[https://github.com/jimhester/lintr][lintr]] checks R code for
 style and syntax and integrates with [[http://www.flycheck.org][flycheck]]. Must be installed from
 R as library.

#+begin_src emacs-lisp
  (add-hook 'after-init-hook #'global-flycheck-mode)
    (add-hook 'ess-mode-hook
              (lambda () (flycheck-mode t)))
#+end_src

#+begin_src emacs-lisp
  (message "Statistics configuration loaded.")
#+end_src
