
#+TITLE: Mode Configurations

This file contains configurations for different modes.

* Dired config
** Dired extensions
#+begin_src emacs-lisp
  (load "dired-x")
  (require 'dired-quick-sort)
  (dired-quick-sort-setup)
#+end_src

** Visit all marked files using F
Bound to the "F" key.
#+begin_src emacs-lisp
  (eval-after-load "dired"
  '(progn
     (define-key dired-mode-map "F" 'my-dired-find-file)
     (defun my-dired-find-file (&optional arg)
       "Open each of the marked files, or the file under the point, or when prefix arg, the next N files "
       (interactive "P")
       (let* ((fn-list (dired-get-marked-files nil arg)))
         (mapc 'find-file fn-list)))))
#+end_src

** Stripe dired buffers (partly disabled)

Creates a stripe pattern as background for dired buffers (and other
tables, as defined below). Automatic dired hook disabled, because it
looks ugly in the sidebar and with icons.

#+begin_src emacs-lisp
(require 'stripe-buffer)
(add-hook 'org-mode-hook 'org-table-stripes-enable)
; (add-hook 'dired-mode-hook 'stripe-listify-buffer)  
#+end_src

** Reuse buffers (requires dired-single)
#+begin_src emacs-lisp
(defun my-dired-init ()
  "Bunch of stuff to run for dired, either immediately or when it's
   loaded."
  ;; <add other stuff here>
  (define-key dired-mode-map [return] 'dired-single-buffer)
  (define-key dired-mode-map [mouse-1] 'dired-single-buffer-mouse)
  (define-key dired-mode-map "^" 'dired-single-up-directory))

;; if dired's already loaded, then the keymap will be bound
(if (boundp 'dired-mode-map)
        ;; we're good to go; just add our bindings
        (my-dired-init)
  ;; it's not loaded yet, so add our bindings to the load-hook
  (add-hook 'dired-load-hook 'my-dired-init))
#+end_src

** Quickly copy/move between two frames
#+begin_src emacs-lisp
 (setq dired-dwim-target t)
#+end_src
** Omit dotfiles when omit-mode is active

Default toggle: C-x M-o
Unfortunately, this also hides the "..", which I find useful to go to
the parent directory. 

#+begin_src emacs-lisp
(setq dired-omit-files
                (concat dired-omit-files "\\|^\\..+$"))
#+end_src

** Refresh on file change

No need to constantly hit g.

#+begin_src emacs-lisp
(add-hook 'dired-mode-hook 'auto-revert-mode)
 #+end_src

* Pandoc config 
A pandoc menu for markdown and tex files. 

#+begin_src emacs-lisp 
  (load "pandoc-mode")
  (add-hook 'markdown-mode-hook 'pandoc-mode)
  (add-hook 'org-mode-hook 'pandoc-mode)
  (add-hook 'TeX-mode-hook 'pandoc-mode)
  (add-hook 'pandoc-mode-hook 'pandoc-load-default-settings)
  (global-set-key (kbd "C-c p") 'pandoc-main-hydra/body)
#+end_src

* Polymode config
Polymode is a package that supports multiple modes inside a single
buffer. It is aimed particularly at literate programming approaches
and supports, e.g., R and markdown in a single =.Rmd= file. So it is
very useful with knitr in R, given that ESS does not yet fully support
=.Rmd= files.

#+begin_src emacs-lisp :tangle yes
  (require 'poly-R)
  (require 'poly-markdown)
  ;;; polymode + markdown
  (add-to-list 'auto-mode-alist '("\\.md" . poly-markdown-mode))
  ;;; polymode + R
  (add-to-list 'auto-mode-alist '("\\.Snw" . poly-noweb+r-mode))
  (add-to-list 'auto-mode-alist '("\\.Rnw" . poly-noweb+r-mode))
  (add-to-list 'auto-mode-alist '("\\.Rmd" . poly-markdown+r-mode))
#+end_src

* CSV config
Start CSV mode without text wrapping, with background lines, and with
auto-align enabled.

#+begin_src emacs-lisp 
  (add-hook 'csv-mode-hook 'csv-align-mode)
  (add-hook 'csv-mode-hook (lambda () (visual-line-mode -1)))
  (add-hook 'csv-mode-hook 'stripe-buffer-mode)
#+end_src

